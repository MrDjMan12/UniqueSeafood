@page "/bookings/show-booking-details"
@using Microsoft.EntityFrameworkCore
@using UniqueSeafood.Models
@inject IDbContextFactory<UniqueSeafood.Data.UniqueSeafoodContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Show Booking</PageTitle>

<!--Show List of Bookings-->

<h1>Show Booking</h1>
<div>
    <hr />
    <!--The IF condition is used to check whether the booking is found or not in order to display record contents-->
    @if (booking is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title:</dt>
            <dd class="col-sm-10">@booking.Title</dd>
            <dt class="col-sm-2">First Name:</dt>
            <dd class="col-sm-10">@booking.FirstName</dd>
            <dt class="col-sm-2">Last Name:</dt>
            <dd class="col-sm-10">@booking.LastName</dd>
            <dt class="col-sm-2">Number Of Guests:</dt>
            <dd class="col-sm-10">@booking.NumberOfGuests</dd>
            <dt class="col-sm-2">Contact Number:</dt>
            <dd class="col-sm-10">@booking.ContactNumber</dd>
            <dt class="col-sm-2">Email Address:</dt>
            <dd class="col-sm-10">@booking.EmailAddress</dd>
            <dt class="col-sm-2">Special Request:</dt>
            <dd class="col-sm-10">@booking.SpecialRequest</dd>
            <dt class="col-sm-2">Booking Date:</dt>
            <dd class="col-sm-10">@booking.BookingDate</dd>
            <dt class="col-sm-2">Booking Time:</dt>
            <dd class="col-sm-10">@booking.BookingTime</dd>
        </dl>
        <div>
            <a class="btn btn-primary" href="@($"/bookings")">Back</a>
        </div>
    }
</div>

<!--Utilising C# code to find the booking record before it renders to the DOM. We are using an async function to achieve this.-->
@code {
    private Booking? booking;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        booking = await context.Booking.FirstOrDefaultAsync(m => m.Id == Id);

        if (booking is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
